pointLab <- 1:nrow(HawCon)
par(mfrow=c(1,4))
modXRep.glm <- glm(cbind(Dead,Live)~0+trtGpRep/TrtTime,
family=quasibinomial(link='logit'), data=subset(HawCon,Dead>0))
plot(modXRep.glm, pty="s", sub.caption="", lwd=3, cex.lab=1.1,
cex.caption=1.1)
par(mfrow=c(1,4))
for(i in 1:3){
p <- predict(modXRep.glm, type='response')
modXRep.glm <- glm(cbind(Dead,Live)~0+trtGpRep/TrtTime,
family=quasibinomial(link='logit'),
weights=(p*(1-p))^-0.25, data=subset(HawCon,Dead>0))
}
plot(modXRep.glm, pty="s", sub.caption="", lwd=3, cex.lab=1.1,
cex.caption=1.1)
transmort <- function(p, eps){
(p+eps)/(1+2*eps)
}
backmort <- function(ptrans, eps){
ptrans+eps*(2*ptrans-1)
}
mat <- cbind(c(round(transmort(0.99, 0.002),3),
round(transmort(0.999968, 0.002),6)),
c(round(transmort(0.99, 0.005),3),
round(transmort(0.999968, 0.005),6)),
c(round(transmort(0.99, 0.0125),3),
round(transmort(0.999968, 0.0125),6)))
rownames(mat) <- c("p=0.99", "p=0.999968")
colnames(mat) <- c("eps=0.002", 0.005, 0.0125)
mat
par(mfrow=c(1,4))
logit <- make.link("logit")$linkfun
invPower <- function(u, lambda)(lambda*u+1)^(1/lambda)
modXRep.lm <- lm(logit(transmort(PropDead,0.002))~0+trtGpRep/cTime, data=HawCon)
plot(modXRep.lm, pty="s", sub.caption="", lwd=3, cex.lab=1.1,
cex.caption=1.1)
par(mfrow=c(1,4))
modXRep.lm <- lm(logit(transmort(PropDead,0.015))~0+trtGpRep/cTime, data=HawCon)
plot(modXRep.lm, pty="s", sub.caption="", lwd=3, cex.lab=1.1,
cex.caption=1.1)
simdat <- simulate(modXRep.lm, nsim=4)
for(i in 1:4){
res <- resid(lm(simdat[[i]]~0+trtGpRep/cTime, data=HawCon))
qqnorm(res, main=paste("Simulation",i))
}
form <- transmort(PropDead,0.002)~0+trtGpRep/cTime
lambda <- car::powerTransform(form, data=HawCon)$lambda
fullform <- qra::fpower(PropDead,0.827,0.002)~0+trtGpRep/cTime
modXRepP.lm <- lm(fullform, data=HawCon)
par(mfrow=c(1,4))
plot(modXRepP.lm, pty="s", lwd=3, cex.lab=1.1, cex.caption=1.1,
sub.caption=substitute("Linear model, power function transform, "*
lambda*"="*pwr, list(pwr=lambda)))
HawCon$predRep <- predict(modXRep.lm)
qra::graphSum(HawCon, subSet=expression(LifestageTrt=="Egg"),
link="logit",
logScale=FALSE, dead='Dead', tot='Total',
dosevar='TrtTime', ptSize=3,
Rep='RepNumber',
fitRep="predRep",
byFacet=~Species,
yzeroOneOffsets = c(0.008,0.008),
maint='Oranges:HawCon, MedFly', xlab='Days')
RShowDoc("KEYWORDS")
foldp(c(0.2,0.75))
foldp <-function(p,eps)(p+eps)/(1-p+eps)
foldp(c(0.2,0.75),0)
library(qra)
devtools::document()
library(qra)
summary(modX.lmer)
HawCon <- within(HawCon, {
trtGp <- paste0(CN,LifestageTrt, sep=":")
trtGpRep <- paste0(CN,LifestageTrt,RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
abscale <- qra::getScaleCoef(HawCon$scTime)
foldp <- function(p,eps)(p+eps)/(1-p+eps)
logit <- make.link("logit")$linkfun
invPower <- function(u, lambda)(lambda*u+1)^(1/lambda)
modXRep.lm <- lm(logit(transmort(PropDead,0.002))~0+trtGpRep/cTime, data=HawCon)
logit <- make.link("logit")$linkfun
invPower <- function(u, lambda)(lambda*u+1)^(1/lambda)
modXRep.lm <- lm(log(foldp(PropDead,0.002))~0+trtGpRep/cTime, data=HawCon)
modXRep.lmer <- lme4::lmer(log(foldp(PropDead,0.002))~0+trtGpRep/cTime, data=HawCon)
modXRep.lmer <- lme4::lmer(log(foldp(PropDead,0.002))~0+trtGp+(trtGpRep/cTime), data=HawCon)
modXRep.lmer <- lme4::lmer(log(foldp(PropDead,0.002))~0+trtGp+(scTime|trtGpRep), data=HawCon)
summary(modX.lmer)
modX.lmer <- lme4::lmer(log(foldp(PropDead,0.002))~0+trtGp+(scTime|trtGpRep), data=HawCon)
summary(modX.lmer)
names(summary(modX.lmer))
summary(modX.lmer)$ngrps
devtools::document()
library(qra)
?make.link
devtools::document()
library(qra)
devtools::document()
library(qra)
devtools::document()
library(qra)
devtools::document()
library(qra)
devtools::document()
library(qra)
install.packages("~/pkgs/qra_0.1.17.tar.gz", repos = NULL, type = "source")
devtools::document()
install.packages("~/pkgs/qra_0.1.17.tar.gz", repos = NULL, type = "source")
args(qra::fieller)
library(qra)
devtools::document()
library(qra)
install.packages("~/pkgs/qra_0.1.17.tar.gz", repos = NULL, type = "source")
args(qra::fieller)
qra::fieller
qra::fieller2
install.packages("~/pkgs/qra_0.1.18.tar.gz", repos = NULL, type = "source")
devtools::document()
library(qra)
install.packages("~/pkgs/qra_0.1.19.tar.gz", repos = NULL, type = "source")
devtools::document()
install.packages("~/pkgs/qra_0.1.20.tar.gz", repos = NULL, type = "source")
ls()
inherits(modXRep.glm,'lm')
class(modX.rlmer)
library(lme4)
?lmer
fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
class(fm1)
?glmer
?glmmTMB::glmmTMB
library(glmmTMB)
m1 <- glmmTMB(count~ mined + (1|site),
zi=~mined,
family=poisson, data=Salamanders)
class(m1)
varfun <- function(x)vcov(x)[["cond"]]
varfun(m1)
devtools::document()
library(qra)
devtools::install_github('jhmaindonald/qra')
ls()
names(modX.glm)
modX.glm$df.residual
modX.glm$df.null
library(qra)
devtools::document()
devtools::install_github('jhmaindonald/qra')
devtools::document()
devtools::install_github('jhmaindonald/qra')
devtools::extractLT
qra::extractLT
devtools::install_github('jhmaindonald/qra')
attach('~/r/infest/.RData')
num66.df <- num66.df
AusPip <- ColdData::ColdData[["AusPip"]]
## Change name "CommodityCultivar" to "CC", for more compact output.
CCnum <- match("CommodityCultivar", names(AusPip))
names(AusPip)[CCnum] <- "CC"
AusPip$trtGp <- with(AusPip, factor(paste0(CC,TempMin)))
AusPip$trtGpRep <- with(AusPip, factor(paste0(CC,
TempMin,":",RepNumber)))
AusPip$TempMin <- with(AusPip, factor(TempMin))
AusPip$Dead[AusPip$Dead<0] <- 0
cols <- c('PropDead','TrtTime','RepNumber', "MethodOfInfestation",
'trtGpRep','TempMin','Dead','Live','Total','trtGp')
Hosui <- droplevels(subset(AusPip,CC=="Hosui")[,cols])
library(glmmTMB)
aRho2.TMB <- glmmTMB(cbind(Dead,Live)~0+trtGp/TrtTime+(1|trtGpRep),
dispformula=~trtGp+splines::ns(TrtTime,2),
family=list(family="betabinomial",link="logit"),
data=Hosui)
aRho2.TMBclog <- update(aRho2.TMB,
family=list(family="betabinomial",link="cloglog"))
aRho2LTclog <- qra::extractLT(p=0.99,
obj=aRho2.TMBclog,
link="cloglog",
nEsts=2,
slopeAdd=2,
eps=0,
scaling=c(1,1),
df.t=4)[,-2]
aRho2LTclog
aRho2.TMB <- glmmTMB(cbind(Dead,Live)~0+trtGp/TrtTime,
# +(1|trtGpRep),
dispformula=~trtGp+splines::ns(TrtTime,2),
family=list(family="betabinomial",link="logit"), data=Hosui)
aRho2LTclog <- qra::extractLT(p=0.99,
obj=aRho2.TMBclog,
link="cloglog",
nEsts=2,
slopeAdd=2,
eps=0,
scaling=c(1,1),
df.t=4)[,-2]
aRho2.TMBclog <- update(aRho2.TMB,
family=list(family="betabinomial",link="cloglog"))
aRho2LTclog <- qra::extractLT(p=0.99,
obj=aRho2.TMBclog,
link="cloglog",
nEsts=2,
slopeAdd=2,
eps=0,
scaling=c(1,1),
df.t=4)[,-2]
aRho2.TMB <- glmmTMB(cbind(Dead,Live)~0+TrtTime+(1|trtGpRep),
dispformula=~trtGp+splines::ns(TrtTime,2),
family=list(family="betabinomial",link="logit"), data=Hosui)
aRho2.TMBclog <- update(aRho2.TMB,
family=list(family="betabinomial",link="cloglog"))
aRho2LTclog <- qra::extractLT(p=0.99,
obj=aRho2.TMBclog,
link="cloglog",
nEsts=2,
slopeAdd=2,
eps=0,
scaling=c(1,1),
df.t=4)[,-2]
aRho2LTclog <- qra::extractLT(p=0.99,
obj=aRho2.TMBclog,
link="cloglog",
nEsts=1,
slopeAdd=1,
eps=0,
scaling=c(1,1),
df.t=4)[,-2]
codling1988 <- num66.df
rm(num66.df)
table(row.names(codling1988))
codling1988[1:4,]
names(codling1988)[5] <- 'PropDead'
codling1988[1:4,]
names(codling1988)
colnames(codling1988)
colnames(codling1988)[5] <- 'PropDead'
codling1988[1:4,]
codling1988 <- as.data.frame(codling1988)
codling1988[1:4,]
codling[1:2,]
codling1988$ct <- rep(0, nrow(codling1988))
?strsplit
cult <- sapply(strsplit(rownames(codling1988),'.', fixed=T), function(x)x[1])
cult[1:3]
table(cult)
nch <- nchar(cult)
codling1988$Cultivar <- substring(cult,1,nch-1)
codling1988$rep <- as.numeric(substring(cult,nch-1,nch))
codling1988$rep <- substring(cult,nch-1,nch)
codling1988[1:2,]
codling1988$rep <- as.numeric(substring(cult,nch,nch))
z <- unique(codling1988$Cultivar)
z
z2 <- unique(subset(codling,year==1988)$Cultivar)
z2
z2 <- as.character(unique(subset(codling,year==1988)$Cultivar))
z2
names(z2)<-z
z1 <- codling1988$Cultivar[z2]
table(z1)
z2
z <- codling1988$Cultivar
names(z) <- z
z1 <- z[z2]
table(z1)
table(z)
table(z2)
z2 <- as.character(unique(subset(codling,year==1988)$Cultivar))
table(z2)
z2 <- as.character((subset(codling,year==1988)$Cultivar))
table(z2)
z <- factor(codling1988$Cultivar)
table(z)
levels(z)
z2 <- as.character(unique(subset(codling,year==1988)$Cultivar))
z2
z2 <- levels(relevel(subset(codling,year==1988)$Cultivar))
z2 <- levels(delevel(subset(codling,year==1988)$Cultivar))
?factor
z2 <- levels(droplevels(subset(codling,year==1988)$Cultivar))
z2
levels(z)
table(z)
levels(z) <- z2[c(1:3,5,4)]
table(z)
codling1988$Cultivar <- z
table(codling1988$Cultivar)
codling1988[1:4,]
codling1988 <- codling1988[,c(2,1,3:7)]
codling1988[1:4,]
trtGpRepDose <- with(codling1988, paste0(Cultivar,rep,'-',dose))
trtGpRepDose2 <- with(subset(codling, year==1988), paste0(Cultivar,rep,'-',dose))
nr <- match(trtGpRepDose,trtGpRepDose2, nomatch=0)
sum(nr==0)
trtGpRepDose[1:4]
trtGpRepDose2[1:4]
nr[1:4]
length(nr)
nr[nr==0]
trtGpRepDose
trtGpRepDose2
table(codling$rep)
qra::gpsWithin
rep <- with(subset(codlingyear==1988), qra::gpsWithin(rep,Cultivar))
rep <- with(subset(codling==1988), qra::gpsWithin(rep,Cultivar))
rep <- with(subset(codling,year==1988), qra::gpsWithin(rep,Cultivar))
Rep <- with(subset(codling,year==1988), qra::gpsWithin(rep,Cultivar))
trtGpRepDose2 <- with(subset(codling, year==1988), paste0(Cultivar,Rep,'-',dose))
nr <- match(trtGpRepDose,trtGpRepDose2, nomatch=0)
sum(nr==0)
codling1988$ct[nr>0] <- subset(codling,year==1988)[nr]
codling1988$ct[nr>0] <- subset(codling,year==1988)$ct[nr]
plot(ct ~ dose, data=codling1988)
with(codling, points(ct ~ dose, col=2, pch='x')
)
df <- cbind(codling1988[,nr>0], subset(codling, year==1988)[nr, c('dead','tot')])
df <- cbind(codling1988[nr>0,], subset(codling, year==1988)[nr, c('dead','tot')])
df[1:20,]
df <- cbind(codling1988[nr>0,c('Cultivar','dead','total')], subset(codling, year==1988)[nr, c('dead','tot')])
df[1:20,]
df[21:40,]
df[41:66,]
length(nr)
nr[77]
nr[76]
table(nr)
codling1988[66,]
dim(codling1988)
nr[77]
codling1988[nr==0,]
codling[1:20,]
sort(codling1988$tot)[1:4]
codling1988['Braeburn1.1',]
codling1988['Braeburn2',]
codling1988['Braeburn1',]
names(rownames(codling1988)=='Braeburn1.1')
sum(rownames(codling1988)=='Braeburn1.1')
sum(rownames(codling1988)=='Braeburn1')
rownames(codling1988)[1:20]
codling1988[16,]
codling1988[15:16,]
codling1988[15:17,]
sum(row.names(codling1988)=='Braeburn1')
sum(row.names(codling1988)=='Braeburn1.1')
codling1988[row.names(codling1988)=='Braeburn1.1',]
codling1988[row.names(codling1988)=='Braeburn1',]
codling1988[17,]
codling1988[17,'ct'] <-NA
codling1988[row.names(codling1988)=='Braeburn1',]
save(codling1988, file='data/codling1988.rda')
library(qra)
attach('~/r/infest/.RData')
detach(6)
ls(pos=2)
dim(allsor)
allsor[1:10,]
allsor[1:20,]
codling1988[17,'ct'] <- 33.06
codling1988[15:17,'ct']
codling1988[15:18,'ct']
codling1988[17,'ct'] <- 25.61125
save(codling1988, file='data/codling1988.rda')
codling1988[15:18,'ct']
codling1988 <- qra::codling1988
codling1988$trtGpRep <- with(codling1988, paste0(Cultivar,rep))
Rho0.TMB <- glmmTMB(cbind(Dead,Live)~0+Cultivar/dose+(1|trtGpRep),
family=list(family='betabinomial',link='logit'),
data=codling1988)
Rho0.TMB <- glmmTMB(cbind(dead,total-dead)~0+Cultivar/dose+(1|trtGpRep),
family=list(family='betabinomial',link='logit'),
data=codling1988)
Rho2.TMB <- update(Rho0.TMB, dispformula=~trtGp+splines::ns(TrtTime,2))
Rho2.TMB <- update(Rho0.TMB, dispformula=~Cultivar+splines::ns(dose,2))
Rho0.TMBclog <- glmmTMB(cbind(dead,total-dead)~0+Cultivar/dose+(1|trtGpRep),
family=list(family='betabinomial',link='cloglog'),
data=codling1988)
Rho2.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2))
bbmle::AICtab(Rho2.TMBclog,Rho2.TMB)
Rho2.TMBclog <- update(Rho2.TMBclog, ziformula=~Cultivar)
summary(Rgo2.TMBclog)
summary(Rho2.TMBclog)
Rho2.TMBclog <- update(Rho2.TMBclog, ziformula=~0+Cultivar)
summary(Rho2.TMBclog)
Rho2.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2))
Rho2.TMBclog <- update(Rho2.TMBclog, ziformula=~Cultivar)
Rho2a.TMBclog <- update(Rho2.TMBclog, ziformula=~Cultivar)
summary(Rho2a.TMBclog)
Rho2b.TMBclog <- update(Rho2a.TMBclog, ziformula=~0+Cultivar)
summary(Rho2b.TMBclog)
Rho2b.TMBclog <- update(Rho2a.TMBclog, ziformula=~0+trtGpRep)
summary(Rho2b.TMBclog)
Rho2b.TMBclog <- update(Rho2a.TMBclog, ziformula=~1)
summary(Rho2b.TMBclog)
getRho
knitr::opts_chunk$set(echo = FALSE, comment=NA, fig.align='center')
options(show.signif.stars=FALSE)
library(knitr)
library(kableExtra)
library(magrittr)
## Function to extract estimates of 'rho'
getRho <- function(obj){
mm <- model.matrix(obj$modelInfo$allForm$dispformula,
data=obj$frame)
fixdisp <- fixef(obj)[["disp"]]
1/(1+exp(mm%*%fixdisp))
}
rho <- getRho(Rho2.TMBclog)
search()
xyplot(rho~dose, groups=Cultivar, data=codling1988, auto.key=list(columns=5))
rho <- getRho(Rho2.TMB)
xyplot(rho~dose, groups=Cultivar, data=codling1988, auto.key=list(columns=5))
Rho2.TMB <- glmmTMB(cbind(dead,total-dead)~0+Cultivar/splines::ns(dose,2)+(1|trtGpRep),
dispformula=~Cultivar+splines::ns(dose,2),
family=list(family='betabinomial',link='logit'),
data=codling1988)
rho <- getRho(Rho2.TMB)
xyplot(rho~dose, groups=Cultivar, data=codling1988, auto.key=list(columns=5))
summary(Rho2.TMBclog)
fixef(Rho2.TMB)
Rho2.TMB <- glmmTMB(cbind(dead,total-dead)~0+Cultivar/dose+(1|trtGpRep),
dispformula=~Cultivar+splines::ns(dose,2),
family=list(family='betabinomial',link='logit'),
data=subset(codling1988,dose>0))
Rho0.TMBclog <- glmmTMB(cbind(dead,total-dead)~0+Cultivar/dose+(1|trtGpRep),
family=list(family='betabinomial',link='cloglog'),
data=subset(codling1988,dose>0))
Rho2.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2))
rho <- getRho(Rho2.TMBclog)
xyplot(rho~dose, groups=Cultivar, data=codling1988, auto.key=list(columns=5))
xyplot(rho~dose, groups=Cultivar, data=subset(codling1988,dose>0), auto.key=list(columns=5))
Rho2.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2))
Rho2a.TMBclog <- update(Rho2.TMBclog, ziformula=~0+Cultivar)
summary(Rho2a.TMBclog)[['cond']]
summary(Rho2a.TMBclog)
summary(Rho2.TMBclog)[['cond']]
summary(Rho2.TMBclog)
Rho2b.TMBclog <- update(Rho2.TMBclog, ziformula=~1)
summary(Rho2b.TMBclog)
Rho3.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2),
formula=cbind(dead,total-dead)~0+Cultivar/dose+splines::ns(dose,2)+
(1|trtGpRep))
names(summary(Rho3.TMBclog))
coef(summary(Rho3.TMBclog))
Rho3.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2),
formula=cbind(dead,total-dead)~0+I(dose==0)+
Cultivar/dose+splines::ns(dose,2)+(1|trtGpRep))
coef(summary(Rho3.TMBclog))[['cond']]
Rho3.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2),
formula=cbind(dead,total-dead)~I(dose==0)+
Cultivar/dose+splines::ns(dose,2)+(1|trtGpRep))
coef(summary(Rho3.TMBclog))[['cond']]
Rho3.TMBclog <- glmmTMB(cbind(dead,total-dead)~I(dose==0)+
Cultivar/dose+splines::ns(dose,2)+(1|trtGpRep),
dispformula=~Cultivar+splines::ns(dose,2),
family=list(family='betabinomial',link='logit'),
data=codling1988)
Rho3.TMBclog <- glmmTMB(cbind(dead,total-dead)~0+I(dose==0)+
Cultivar/dose+splines::ns(dose,2)+(1|trtGpRep),
dispformula=~Cultivar+splines::ns(dose,2),
family=list(family='betabinomial',link='logit'),
data=codling1988)
rho <- getRho(Rho2.TMBclog)
xyplot(rho~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=5))
scatter.smooth(resid(Rho2.TMBclog)~fitted(Rho2.TMBclog))
scatter.smooth(resid(Rho2.TMB)~fitted(Rho2.TMB))
Rho3.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2),
formula=cbind(dead,total-dead)~0+Cultivar/dose+
splines::ns(dose,3)+(1|trtGpRep))
coef(summary(Rho3.TMBclog))[['cond']]
Rho3.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,2),
formula=cbind(dead,total-dead)~0+Cultivar+
splines::ns(dose,3)+(1|trtGpRep))
Rho3.TMBclog <- update(Rho0.TMBclog, dispformula=~Cultivar+splines::ns(dose,3),
formula=cbind(dead,total-dead)~0+Cultivar+
splines::ns(dose,3)+(1|trtGpRep))
scatter.smooth(resid(Rho3.TMBclog)~fitted(Rho3.TMBclog))
rho <- getRho(Rho3.TMBclog)
xyplot(rho~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=5))
xyplot(resid(Rho3.TMBclog)~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=5))
xyplot(resid(Rho3.TMBclog)~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=5), par.settings=simpleThemw(pch=1:5))
xyplot(resid(Rho3.TMBclog)~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=5), par.settings=simpleTheme(pch=1:5))
xyplot(resid(Rho3.TMBclog)~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=4), par.settings=simpleTheme(pch=1:5))
?xyplot
xyplot(resid(Rho3.TMBclog)~dose, groups=Cultivar, data=subset(codling1988,dose>0),
auto.key=list(columns=4), par.settings=simpleTheme(pch=1:5), type=c("p","smooth"))
library(qra)
load(url(https://github.com/jhmaindonald/qra/blob/master/data/codling1988.rda))
load(url('https://github.com/jhmaindonald/qra/blob/master/data/codling1988.rda'))
dim(qra::codling)
dim(qra::codling1988)
?download.file
devtools::document()
library(qra)
devtools::document()
library(qra)
install.packages("~/pkgs/qra_0.1.23.tar.gz", repos = NULL, type = "source")
install.packages("GLMMadaptive")
devtools::install_git('https://'gitlab.com/daagur/qra.git')
devtools::install_git('https://gitlab.com/daagur/qra.git')
list(a=1,b=2)
install.packages("~/pkgs/qra_0.1.24.tar.gz", repos = NULL, type = "source")
devtools::document()
install.packages("~/pkgs/qra_0.1.24.tar.gz", repos = NULL, type = "source")
devtools::install_git('https://gitlab/daagur/DAAG.git')
devtools::install_git('https://gitlab.com/daagur/DAAG.git')
