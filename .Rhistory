<<<<<<< HEAD
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
cap3 <- "Diagnostics for model with binomial errors and observation level
random effects."
cap4 <- "Fitted lines and quadratic curves, for the models where the
treatment effect is modeled as a quadratic function of time.
Panel A is for the model that uses a complementary log-log
(cloglog) link, while Panel B is for a logit link. The quadratic
curves are shown in attenuated colors."
library(lattice)
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
upper <- upper[subscripts]
lower <- lower[subscripts]
panel.lines(x,lower, ...)
panel.lines(x,upper, ...)
}
panel2 <- function(x, y, ...){
panel.superpose(x, y,
## panel.groups = my.panel.bands,
type='l', alpha=0.2,...)
panel.xyplot(x, y, type='l', lwd=2, cex=0.6, ...)
}
parset <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2)
## c('solid','1141')
dat <- expand.grid(trtGp=factor(levels(HawCon$trtGp), levels=levels(HawCon$trtGp)),
TrtTime=pretty(range(HawCon$TrtTime),15), link=c('cloglog','logit'))
dat$scTime <- scale(dat$TrtTime)
dat$trtGpRep <- rep('new',nrow(dat))
hatClog <- predict(HCbb.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatClog2 <- predict(HCbb2s.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
hatLgt2 <- predict(HCbb2s.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
dat <- within(dat, {fit<-c(hatClog$fit,hatLgt$fit); fit2<-c(hatClog2$fit,hatLgt2$fit)
se.fit<-c(hatClog$se.fit,hatLgt$se.fit); se.fit2<-c(hatClog2$se.fit,hatLgt2$se.fit)})
dat <- within(dat, {lwr<-fit-2*se.fit; upr<-fit+2*se.fit})
p <- c(.02,.2,.5,.8, .99, .999968)
clog <- make.link('cloglog')$linkfun
logit <- make.link('logit')$linkfun
fitpos <- list(clog(p), logit(p))
lab <- paste(p)
lim <- list(clog(c(0.02, 0.99998)), logit(c(0.02, 0.99998)))
lim <- lapply(lim, function(x)c(x[1],x[1]+diff(x)*1.2))
gph <- xyplot(fit~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
# upper = dat$upr, lower = dat$lwr,
panel = panel2,
xlab="Days in coolstorage", ylab="Fitted value",
auto.key=list(text=levels(HawCon$trtGp), columns=4, points=FALSE, lines=TRUE),
par.settings=parset, layout=c(2,1), scales=list(x=list(at=c(2,6,10,14)),
y=list(relation='free',
at=fitpos, labels=lab, limits=lim), alternating=c(1,1)))
gph2 <- update(gph, strip=strip.custom(factor.levels=
c("A: Complementary log-log link",
"B: Logit link")))
parset3 <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2, alpha=0.25)
gph3 <- xyplot(fit2~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
## upper = dat$upr, lower = dat$lwr,
panel = panel2, par.settings=parset3, layout=c(2,1))
gph2+latticeExtra::as.layer(gph3)
HCXreS.BIobs <- update(HCXre.BIobs,
formula=~ .+ trtGp/splines::ns(scTime,2))
HCXreS.BIobs <- update(HCXre.BIobs,
formula=~ .+ trtGp/poly(scTime,2))
mnam <- c(paste0('BB: Complementary log-log link', c('', ', added curve')),
paste0('BB: Logit link', c('', ', added curve')), 'HCXre.BIobs')
bbmle::AICtab(HCbb.cll,HCbb2s.cll,HCbb.logit,HCbb2s.logit, HCXre.BIobs), mnames=mnam)
bbmle::AICtab(HCbb.cll,HCbb2s.cll,HCbb.logit,HCbb2s.logit, HCXre.BIobs, mnames=mnam)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit, link="logit",
a=1:8, b=9:16, eps=0, offset=c(0,1),
df.t=NULL)[,-2]
HCbb.logit
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit, link="logit",
a=1:8, b=9:16, eps=0, offset=0,
df.t=NULL)[,-2]
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit, link="logit",
a=1:8, b=9:16, eps=0, offset=0,
df.t=8)[,-2]
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, offset=0,
df.t=8)[,-2]
HCbb.LTcll <- qra::extractLT(p=0.99, obj=HCbb.cll,
a=1:8, b=9:16, eps=0, offset=0,
df.t=8)[,-2]
HCbb.LTcll
HCbb.LTcll <- qra::extractLT(p=0.99, obj=HCbb.cll, link="cloglog",
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
rownames(HCbb.LTcll) <- shorten(rownames(HCbb.LTcll))
HCbbDisp1.cll <- update(HCbb.cll, dispformula=~1)
HCbin.cll <- update(HCbb.cll, family=binomial(link="cloglog"))
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
ls()
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
HCbb.LTlogit <- extractLT(p=0.99, obj=HCbb.logit,                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
g
maxg
tt
b[2]
v22
round(vcov(HCbb.logit),2)
round(varfun(HCbb.logit),2)
round(vcov(HCbb.logit)[['cond']],2)
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
round(vcov(HCbb.logit)[['cond']],2)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2),
family=betabinomial(link="cloglog"), data=HawCon)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), conrol=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
## trtGpRep will identify species, lifestage, and rep
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
cap3 <- "Diagnostics for model with binomial errors and observation level
random effects."
round(vcov(HCbb2s.logit)$cond,2)
round(vcov(HCbb2s.cll)$cond,2)
dim(HawCon)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
sapply(hatLgt, function(x)x[1:2])
summary(HCbb.logit)
HCbb.logit <- update(HCbb.cll, dispformula=~trtGp+poly(TrtTime,3),
family=betabinomial(link="logit"))
round(coef(summary(HCbb.logit))$cond,2)
HCbiObs.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+(obs)+(TrtTime|trtGpRep)
HCbiObs.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
HCbiObs.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
=======
nam <- gsub(txt,'', nam, fixed=TRUE)
}
nam
}
cap8 <- "Quantile residuals, by treatment group."
simRes <- DHARMa::simulateResiduals(HCbb.cll, n=250)
dotplot(scaledResiduals~HawCon$trtGp, data=simRes,
scales=list(x=list(rot=30)), ylab="Quantile Residuals",
main=list(expression(plain("A: Residuals, by treatment group")),
x=0.05, y=-0.2, just="left"))
bwplot(scaledResiduals~HawCon$trtGp, data=simRes,  ylab="",
scales=list(x=list(rot=30)),
main=list(expression(plain("B: Boxplot comparison of residuals")),
x=0.05, y=-0.2, just="left"))
## Alternative -- group names are not shown:
## plotResiduals(simRes, form=HawCon$trtGp)
cap6 <- "Panels A and B show intra-class correlation estimates
for, respectively, a complementary log-log link and a logit link.
Both models assume a betabinomial error."
fixef(HCbb.cll)[['disp']]
coef(HCbb.cll)[['disp']]
coef(summary(HCbb.cll))[['disp']]
getRho
getwd()
104.58+42.67-227.99
104.58+42.67-27.99
args(t.test)
?t.test
args(abline)
vignette('afex::introduction-mixed-models')
vignette('afex::introduction-mixed-models',package='afex')
vignette('introduction-mixed-models',package='afex')
?afex::mixed
library(qra)
ls()
rm(list=ls())
library(qra)
search()
library(qra, quietly=TRUE)
library(ggplot2)
codling <- DAAG::codling
num1 <- match(unique(codling$gp),codling$gp)
rnum <- rep(1, nrow(codling))
rnum[num1] <- 2
nnew <- rep(1:nrow(codling),rnum)
nctl <- match(num1,nnew)
codling0 <- codling[nnew,]
codling0[nctl,c('dose','tot','dead','pobs','cm','ct')] <-
with(codling0[nctl,], cbind(rep(0,length(num1)), numcm, round(cm*numcm),
cm,rep(NA,length(num1)),rep(0,length(num1))))
codling0[["logCT"]] <- log(codling0[["ct"]])
codling0[["Rep"]] <- with(codling0, qra::gpsWithin(gp, list(Cultivar,year)))
names(codling0)
graphSum(df=codling0, subSet=expression(year==1988),
link="cloglog", logScale=FALSE,
dead="dead", tot="tot", dosevar="ct", Rep="Rep",
fitRep=NULL, fitPanel=NULL,
byFacet=~Cultivar,
maint="Codling moth, MeBr",
xlab=expression(bold("CT ")*"(gm.h."*m^{-3}*")"))
graphSum(df=codling0, subSet=expression(year==1989),
link="cloglog", logScale=FALSE,
dead="dead", tot="tot", dosevar="CT", Rep="Rep",
fitRep=NULL, fitPanel=NULL,
byFacet=~Cultivar,
maint="Codling moth, MeBr",
xlab=expression(bold("CT ")*"(gm.h."*m^{-3}*")"))
search()
library(qra, quietly=TRUE)
library(ggplot2)
codling <- DAAG::codling
num1 <- match(unique(codling$gp),codling$gp)
rnum <- rep(1, nrow(codling))
rnum[num1] <- 2
nnew <- rep(1:nrow(codling),rnum)
nctl <- match(num1,nnew)
codling0 <- codling[nnew,]
codling0[nctl,c('dose','tot','dead','pobs','cm','ct')] <-
with(codling0[nctl,], cbind(rep(0,length(num1)), numcm, round(cm*numcm),
cm,rep(NA,length(num1)),rep(0,length(num1))))
codling0[["logCT"]] <- log(codling0[["ct"]])
codling0[["Rep"]] <- with(codling0, qra::gpsWithin(gp, list(Cultivar,year)))
graphSum(df=codling0, subSet=expression(year==1988),
link="cloglog", logScale=FALSE,
dead="dead", tot="tot", dosevar="ct", Rep="Rep",
fitRep=NULL, fitPanel=NULL,
byFacet=~Cultivar,
maint="Codling moth, MeBr",
xlab=expression(bold("CT ")*"(gm.h."*m^{-3}*")"))
graphSum(df=codling0, subSet=expression(year==1989),
link="cloglog", logScale=FALSE,
dead="dead", tot="tot", dosevar="ct", Rep="Rep",
fitRep=NULL, fitPanel=NULL,
byFacet=~Cultivar,
maint="Codling moth, MeBr",
xlab=expression(bold("CT ")*"(gm.h."*m^{-3}*")"))
library(lattice)
cloglog <- make.link("cloglog")$linkfun
codling88  <- droplevels(subset(DAAG::codling, year==1988))
codling88 <- within(codling88, apobs <- (pobs-cm)/(1-cm))
# ctl <- glmmTMBControl(optimizer=optim,
#                       optArgs=list(method="BFGS"))
# codling88.BB2 <- glmmTMB(cbind(dead,tot-dead)~0+
#                            Cultivar/poly(ct,2)+(ct|gp),
#                            family=betabinomial(link='cloglog'),
#                            data=codling88, control=ctl)
codling88[["Rep"]] <- with(codling88, qra::gpsWithin(gp, list(Cultivar,year)))
xyplot(cloglog(apobs)~ct|Cultivar, groups=Rep, data=codling88)
codling89  <- droplevels(subset(DAAG::codling, year==1989))
codling89 <- within(codling89, apobs <- (pobs-cm)/(1-cm))
codling89[["Rep"]] <- with(codling89, qra::gpsWithin(gp, list(Cultivar,year)))
xyplot(cloglog(apobs)~ct|Cultivar, groups=Rep, data=codling89)
search()
devtools::document()
library(qra)
install.packages("~/pkgs/qra_0.1.4.tar.gz", repos = NULL, type = "source")
?devtools::install_git
search()
108.75-24.54
24.54/108.75
84.21/108.75
2/(2.1*.774)*12
29/(2.1*..2454)*12
29/(2.1*.2454)*12
2/(2.1*.774)*12*108.75
2/(2.7*.774)*12*108.75
tab <- read.csv('~/Downloads/Germany-2020.csv')
tab
sum(tab[,-1])
tot <- sum(tab[,-1])
f <- sum(tab[,5:13])
f <- sum(tab[5:13,3])
f/tot
1-f/tot
2 * 83.8/2.1 * 12
29 * 83.8/2.1 * 12
as.Date("2021-05-21")+56
>>>>>>> 75b231735546e15ea0923aff5b77c29517048355
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
## trtGpRep will identify species, lifestage, and rep
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
<<<<<<< HEAD
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
=======
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|rep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
>>>>>>> 75b231735546e15ea0923aff5b77c29517048355
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, dispformula=~trtGp+poly(TrtTime,3),
family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
<<<<<<< HEAD
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
=======
formula=.~.+poly(TrtTime,2)[,-1]+(TrtTime|rep))
names(HawCon)
table(HawCon$rep)
args(gpsWithin)
?gpsWithin
obs <- 1:nrow(HawCon)
HawCon$obsWrep <- gpsWithin(obs, rep)
class(HawCon$rep)
HawCon$obsWrep <- gpsWithin(obs, factor(rep))
gpsWithin
class(obs)
names(DAAG::codling)
z <- split(obs, Hawcon$rep)
z <- split(obs, HawCon$rep)
z[[1]]
z[[2]]
match(z[[1]], unique(z[[1]]))
zz <- lapply(x,function(x) match(x, unique(x))))
zz <- lapply(z,function(x) match(x, unique(x)))
zz[[1]]
zz <- lapply(split(obs,HawCon$rep),function(x) match(x, unique(x)))
zz <-  unsplit(zz)
zz <-  unsplit(zz,HawCon$rep)
zz[1:20]
HawCon$obsWrep <- gpsWithin(obs, HawCon$rep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|obsINtrtGp/trtGp)+
(TrtTime|rep)
HCbi.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
summary(HCbi.cll)
simRef <- simulateResiduals(HCbi.cll, n=250, seed=FALSE)
plotQQunif(simRef)
plotResiduals(simRef)
plotResiduals(simRef, form=log(HawCon$Total), xlab="log(Total)")
HCbbo.cll <- glmmTMB(formObs, control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|rep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
AIC(HCbi.cll,HCbi.cll)
AIC(HCbi.cll,HCbb.cll)
HCbb.cll <- glmmTMB(form,
family=betabinomial(link="cloglog"), data=HawCon)
AIC(HCbi.cll,HCbb.cll)
summary(HCbi.cll)
?dummy
table(HawCon$trtGp)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+
(dummy(trtGp,"MedFlyEgg:"))+
(dummy(trtGp,"MedFlyL1:"))+
(dummy(trtGp,"MedFlyL2:"))+
(dummy(trtGp,"MedFlyL3:"))+
(dummy(trtGp,"MelonFlyEgg:"))+
(dummy(trtGp,"MelonFlyL1:"))+
(dummy(trtGp,"MelonFlyL2:"))+
(dummy(trtGp,"MelonFlyL3:"))+
(TrtTime|rep)
HCbi.cll <- glmmTMB(formObs, control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
?glmmTMB
HCbb2.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime^2,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
AIC(HCbb.cll, HCbb2.cll)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
AIC(HCbb.cll, HCbb2.cll)
HCbb2.cll <- glmmTMB(form,
dispformula=~trtGp+poly(sqrt(TrtTime),3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
AIC(HCbb.cll, HCbb2.cll)
?dotplot
dotplot(~TrtTime|trtGp, data=HawCon)
dotplot(~sqrt(TrtTime)|trtGp, data=HawCon)
HawCon$frac <- with(HawCon, TrtTime/max(TrtTime))
HCbb2.cll <- glmmTMB(form,
dispformula=~trtGp+poly(frac,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
AIC(HCbb.cll, HCbb2.cll)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+
(0+dummy(trtGp,"MedFlyEgg:"))+
(0+dummy(trtGp,"MedFlyL1:"))+
(0+dummy(trtGp,"MedFlyL2:"))+
(0+dummy(trtGp,"MedFlyL3:"))+
(0+dummy(trtGp,"MelonFlyEgg:"))+
(0+dummy(trtGp,"MelonFlyL1:"))+
(0+dummy(trtGp,"MelonFlyL2:"))+
(0+dummy(trtGp,"MelonFlyL3:"))+
(TrtTime|rep)
HCbi.cll <- glmmTMB(formObs, control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
set.seed(29)
AIC(HCbb.cll,HCbi.cll)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+(1|obs)+(TrtTime|rep)
HCbi.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
AIC(HCbb.cll,HCbi.cll)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+(obs)+(TrtTime|rep)
HCbi.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
set.seed(29)
simRef <- simulateResiduals(HCbi.cll, n=250, seed=FALSE)
plotQQunif(simRef)
plotResiduals(simRef)
plotResiduals(simRef, form=log(HawCon$Total), xlab="log(Total)")
data(package='lme4')
data(package='MEMSS')
?MEMSS::ergoStool
?MEMSS::Machines
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+(obs)+(TrtTime|rep)
HCbi.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
AIC(HCbb.cll,HCbi.cll)
names(HCbb.cll)
names(HCbb.cll$modelInfo)
names(HCbb.cll$obj)
names(HCbb.cll$fit)
names(HCbb.cll$sdr)
names(HCbb.cll$call)
names(HCbb.cll$family)
HCbb.cll$family
names(HCbb.cll$call$family)
HCbb.cll$call$family$link
HCqb.glm <- glm(cbind(Dead,Live)~0+trtGp/TrtTime, family=quasibinomial)
HCqb.glm <- glm(cbind(Dead,Live)~0+trtGp/TrtTime, family=quasibinomial, data=HawCon)
HCqb.glm$call$family$link
HCqb.glm$call$family
HCqb.glm$call$link
names(HCqb.glm$call)
names(HCqb.glm)
summary.glm
fitted.glm
predict.glm
family(HCqb.glm)
family(HCqb.glm)$link
family(HCbb.cll)
family(HCbb.cll)$link
family(HCbb.cll)$linkinv
family(HCqb.gam)$linkinv
family(HCqb.glm)$linkinv
fieller()
fieller
ls()
family(disp)
?lm
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
family(lm.D9)
family(lm.D9)$linkinv
names(family(lm.D9))
ls()
inherits(HCqb.glm, "lm")
?glmFamily
class(HCqb.glm)
family(HCqb.glm)[['link']]
HawCon <- qra::HawCon
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
rep <- paste0(CN,LifestageTrt,":",RepNumber)
})
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|rep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
ctl <- glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS"))
HawCon <- qra::HawCon
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
rep <- paste0(CN,LifestageTrt,":",RepNumber)
})
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|rep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
extractLT <-
function(obj,
link=NULL,
logscale=FALSE,
p=0.99,
a=1:3,
b=4:6,
eps=0,
offset=0,
df.t=NULL){
if(is.null(link))link <- family(obj)[['link']]
if(length(a)!=length(b))stop("`a` and `b` must be the same length")
if(inherits(obj,'lm')){
if(is.null(df.t))df.t <- summary(obj)$df.residual
bfun <- coef
varfun <- vcov
} else if(class(obj)%in%c("lmerMod","glmerMod")) {
ngrps <- summary(obj)$ngrps
bfun <- fixef
varfun <- vcov
} else if(class(obj)=="glmmTMB") {
ngrps <- summary(obj)$ngrps[['cond']]
bfun <- function(x)fixef(x)[["cond"]]
varfun <- function(x)vcov(x)[["cond"]]
} else {
cl <- class(obj)
print(paste("No provision for object of class",cl))
return()
}
LT99 <- matrix(0, nrow=length(a), ncol=4)
pAdj <- (p+eps)/(1+2*eps)
blmm <- bfun(obj)
vlmm <- varfun(obj)
rownames(LT99) <- names(blmm)[1:length(a)]
if(is.null(df.t))df.t <- ngrps[length(ngrps)]-1
for(i in 1:length(a)){
ab <- c(a[i], b[i])
bi <- blmm[ab]
vii <- vlmm[ab,ab]
LT99[i,] <- qra::fieller(pAdj, bi, vii, df.t=df.t, offset=offset,
logscale=logscale, link=link, eps=eps)[1:4]
}
colnames(LT99) <- c("est", "var", "lwr", "upr")
LT99
}
extractLT(HCbb.cll, a=1:3, b=4:6)
extractLT(HCbb.cll, a=1:3, b=rep(4,3))
args(extractLT)
family(HCbb.cll)[['link']]
extractLT <- edit(extractLT())
extractLT <- edit(extractLT)
extractLT(HCbb.cll, a=1:3, b=rep(4,3))
link
fieller
extractLT <- edit(extractLT)
extractLT(HCbb.cll, link='cloglog',a=1:3, b=rep(4,3))
fieller <- edit(fieller)
fixef(HCbb.cll)
>>>>>>> 75b231735546e15ea0923aff5b77c29517048355
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
<<<<<<< HEAD
## trtGpRep will identify species, lifestage, and rep
=======
## rep will identify species, lifestage, and rep
>>>>>>> 75b231735546e15ea0923aff5b77c29517048355
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
<<<<<<< HEAD
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
=======
rep <- paste0(CN,LifestageTrt,":",RepNumber)
>>>>>>> 75b231735546e15ea0923aff5b77c29517048355
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
<<<<<<< HEAD
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines);
library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form, dispformula=~trtGp+ns(TrtTime,2),
family=betabinomial(link="cloglog"),
control=ctl, data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll,
dispformula=~trtGp+poly(TrtTime,3),
family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
cap4 <- "Fitted lines and quadratic curves, for the models where the
treatment effect is modeled as a quadratic function of time.
Panel A is for the model that uses a complementary log-log
(cloglog) link, while Panel B is for a logit link. The quadratic
curves are shown in attenuated colors."
library(lattice)
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
upper <- upper[subscripts]
lower <- lower[subscripts]
panel.lines(x,lower, ...)
panel.lines(x,upper, ...)
}
panel2 <- function(x, y, ...){
panel.superpose(x, y,
## panel.groups = my.panel.bands,
type='l', alpha=0.2,...)
panel.xyplot(x, y, type='l', lwd=2, cex=0.6, ...)
}
parset <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2)
## c('solid','1141')
dat <- expand.grid(trtGp=factor(levels(HawCon$trtGp), levels=levels(HawCon$trtGp)),
TrtTime=pretty(range(HawCon$TrtTime),15), link=c('cloglog','logit'))
dat$scTime <- scale(dat$TrtTime)
dat$trtGpRep <- rep('new',nrow(dat))
hatClog <- predict(HCbb.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatClog2 <- predict(HCbb2s.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
hatLgt2 <- predict(HCbb2s.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
dat <- within(dat, {fit<-c(hatClog$fit,hatLgt$fit); fit2<-c(hatClog2$fit,hatLgt2$fit)
se.fit<-c(hatClog$se.fit,hatLgt$se.fit); se.fit2<-c(hatClog2$se.fit,hatLgt2$se.fit)})
dat <- within(dat, {lwr<-fit-2*se.fit; upr<-fit+2*se.fit})
p <- c(.02,.2,.5,.8, .99, .999968)
clog <- make.link('cloglog')$linkfun
logit <- make.link('logit')$linkfun
fitpos <- list(clog(p), logit(p))
lab <- paste(p)
lim <- list(clog(c(0.02, 0.99998)), logit(c(0.02, 0.99998)))
lim <- lapply(lim, function(x)c(x[1],x[1]+diff(x)*1.2))
gph <- xyplot(fit~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
# upper = dat$upr, lower = dat$lwr,
panel = panel2,
xlab="Days in coolstorage", ylab="Fitted value",
auto.key=list(text=levels(HawCon$trtGp), columns=4, points=FALSE, lines=TRUE),
par.settings=parset, layout=c(2,1), scales=list(x=list(at=c(2,6,10,14)),
y=list(relation='free',
at=fitpos, labels=lab, limits=lim), alternating=c(1,1)))
gph2 <- update(gph, strip=strip.custom(factor.levels=
c("A: Complementary log-log link",
"B: Logit link")))
parset3 <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2, alpha=0.25)
gph3 <- xyplot(fit2~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
## upper = dat$upr, lower = dat$lwr,
panel = panel2, par.settings=parset3, layout=c(2,1))
gph2+latticeExtra::as.layer(gph3)
dMedEgg <- with(HawCon, dummy(trtGp,"MedFlyEgg:"))
dMedL1 <- with(HawCon, dummy(trtGp,"MedFlyL1:"))
dMedL2 <- with(HawCon, dummy(trtGp,"MedFlyL2:"))
dMedL3 <- with(HawCon, dummy(trtGp,"MedFlyL3:"))
dMelEgg <- with(HawCon, dummy(trtGp,"MelonFlyEgg:"))
dMelL1 <- with(HawCon, dummy(trtGp,"MelonFlyL1:"))
dMelL2 <- with(HawCon, dummy(trtGp,"MelonFlyL2:"))
dMelL3 <- with(HawCon, dummy(trtGp,"MelonFlyL3:"))
formXre <- cbind(Dead, Live) ~ 0 + trtGp/scTime +
(1|obs) + (1|trtGpRep) +
(0 + dMedEgg| trtGpRep) +
(0 + dMedL1 | trtGpRep) +
(0 + dMedL2 | trtGpRep) +
(0 + dMedL3 | trtGpRep) +
(0 + dMelEgg| trtGpRep) +
(0 + dMelL1 | trtGpRep) +
(0 + dMelL2 | trtGpRep) +
(0 + dMelL3 | trtGpRep)
cloglog <- make.link('cloglog')$linkfun
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+ns(TrtTime,2), control=ctl)
summary(HCgauss.cll)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+ns(TrtTime,3), control=ctl)
coef(summary(HCgauss.cll))$cond
coef(summary(HCgauss.cll))$disp
sim <- plotResiduals(HCgauss.cll, plot=T)
sim <- plotResiduals(HCgauss.cll)
args(plotResiduals)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+ns(TrtTime,4), control=ctl)
sim <- plotResiduals(HCgauss.cll)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+bs(TrtTime,3), control=ctl)
sim <- plotResiduals(HCgauss.cll)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep))
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon, control=ctl)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon)
sim <- plotResiduals(HCgauss.cll)
HCX.BIobs <- glmmTMB(cbind(Dead, Live) ~ 0 + trtGp/scTime +
(1|obs) + (1|trtGpRep), family=binomial(link='cloglog'),
control=ctl, data=HawCon)
AIC(HCX.BIobs, HCXre.BIobs)
sim <- plotResiduals(HCX.BIobs)
round(extractLT(HCX.BIobs, a=1:8,b=9:16),2)
round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)
round(extractLT(HCbb.cll, a=1:8,b=9:16),2)
cbind(round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)[,4],
round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)[,4],
)
cbind(round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)[,4],
round(extractLT(HCbb.cll, a=1:8,b=9:16),2)[,4])
HC.BIobs <- HCX.BIobs
HCX.BIobs <- glmmTMB(cbind(Dead, Live) ~ 0 + trtGp/scTime +
(1|obs) + (TrtTime|trtGpRep),
family=binomial(link='cloglog'),
control=ctl, data=HawCon)
AIC(HCX.BIobs, HC.BIobs)
devtools::document()
rm(list = c("extractLT", "extractLTpwr", "fieller", "fieller2"))
devtools::document()
tools::showNonASCII("~/pkgs/qra/R/extractLT.R")
tools::showNonASCIIfile("~/pkgs/qra/R/extractLT.R")
devtools::document()
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
search()
detach(2)
library(qra)
rm(list=ls())
library(qra)
system.file('qra')
ls()
search()
detach(2)
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
system.file(package='qra')
?system.file
system.file()
devtools::document()
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
search()
detach(2)
search()
devtools::document()
args(remove.packages)
remove.packages
?remove.packages
remove.packages('qra')
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
args(extractLT)
R.version
=======
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
library(glmmTMB)
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|rep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
ls()
extractLT <-
function(obj,
link=NULL,
logscale=FALSE,
p=0.99,
a=1:3,
b=4:6,
eps=0,
offset=0,
df.t=NULL){
if(is.null(link))link <- family(obj)[['link']]
if(length(a)!=length(b))stop("`a` and `b` must be the same length")
if(inherits(obj,'lm')){
if(is.null(df.t))df.t <- summary(obj)$df.residual
bfun <- coef
varfun <- vcov
} else if(class(obj)%in%c("lmerMod","glmerMod")) {
ngrps <- summary(obj)$ngrps
bfun <- fixef
varfun <- vcov
} else if(class(obj)=="glmmTMB") {
ngrps <- summary(obj)$ngrps[['cond']]
bfun <- function(x)fixef(x)[["cond"]]
varfun <- function(x)vcov(x)[["cond"]]
} else {
cl <- class(obj)
print(paste("No provision for object of class",cl))
return()
}
LT99 <- matrix(0, nrow=length(a), ncol=4)
pAdj <- (p+eps)/(1+2*eps)
blmm <- bfun(obj)
vlmm <- varfun(obj)
rownames(LT99) <- names(blmm)[1:length(a)]
if(is.null(df.t))df.t <- ngrps[length(ngrps)]-1
for(i in 1:length(a)){
ab <- c(a[i], b[i])
bi <- blmm[ab]
vii <- vlmm[ab,ab]
LT99[i,] <- qra::fieller(pAdj, bi, vii, df.t=df.t, offset=offset,
logscale=logscale, link=link, eps=eps)[1:4]
}
colnames(LT99) <- c("est", "var", "lwr", "upr")
LT99
}
extractLT(HCbb.cll, a=1:8,b=9:16)
?library
args(fieller)
devtools::document()
rm(list = c("extractLT"))
library(qra)
glmmTMB::glmmTMBControl
?nlme::lme
>>>>>>> 75b231735546e15ea0923aff5b77c29517048355
