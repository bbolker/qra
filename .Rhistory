colnames(Phiranges) <- c("Min","Max")
round(Phiranges,2)
coef(summary(cm89d.TMB))$disp[,1]
cm89d.TMB <- update(cm89.TMB, dispformula=~0+Cultivar,
control=ctl)
nranges <- with(subset(cmDF,year==1989),
sapply(split(numcm,Cultivar),range))
phi89d <- exp(coef(summary(cm89d.TMB))$disp[,1])
Phiranges <- 1+t(nranges-1)*phi89d^-1
colnames(Phiranges) <- c("Min","Max")
round(Phiranges,2)
coef(summary(cm89d.TMB))$disp
cults <- unique(codling88$Cultivar)
for(cult in cults){}
for(cult in cults){
df <- subset(cm88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead))~1, family=betabinomial(link='logit'),
for(cult in cults){
df <- subset(cm88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1, family=betabinomial(link='logit'),
data=df)
phi <- sigma(obj)
print(phi)
}
ls()
cults <- unique(codling88$Cultivar)
for(cult in cults){
df <- subset(cm88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1, family=betabinomial(link='logit'),
data=df)
}
cults <- unique(cmDF88$Cultivar)
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1, family=betabinomial(link='logit'),
data=df)
}
cults <- unique(cmDF88$Cultivar)
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1, family=betabinomial(link='logit'),
data=df)
print(sigma(obj), digits=4)
}
df
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=6)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat['cult',] <- 1+t(nrange-1)*phi^-1
}
mat
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat['cult',] <- c(phi, nrange, 1+t(nrange-1)*phi^-1)
}
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat['cult',] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
cukt ,- 'ROYAL'
cuLt <- 'ROYAL'
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
c(phi, nrange, 1+(nrange-1)*phi^-1)
mat[1,]
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
mat
sigma(phi88)
sigma(cm88.TMB)
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
cults <- unique(cmDF89$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF89, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
cmDF89 <- subset(cmDF,year==1989)
cults <- unique(cmDF89$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF89, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
cults <- unique(cmDF89$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF89, cult==Cultivar)
obj <- glm(cbind(dead,tot-dead)~1,
family=quasibinomial(link='logit'), data=df)
print(summary(obj)$dispersion,digits=4)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
summary(cm88.TMB)
sigma(cm88.TMB)
summary(cm89.TMB)
mat
cults <- unique(cmDF89$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF89, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
args(gpsWithin)
args(gpWithin)
args(qra::gpWithin)
args(qra::gpsWithin)
?qra::gpsWithin
cmDF$Rep <- qra::gpsWithin(cmDF$gp,cmDF$Cultivar)
summary(cm89d.TMB)
summary(cm89a.TMB)
df
names(cmDF)
cmDF <- cmDF[match(unique(cmDF$gp),cmDF$gp),]
cmDF
cm88.TMB <- glmmTMB(cbind(cmdead,numcm-cmdead)~Cultivar,
family=betabinomial(link='logit'),
subset(cmDF,year==1988))
cm88.glm <- glm(cbind(cmdead,numcm-cmdead)~Cultivar,
family=quasibinomial(link='logit'),
data=subset(cmDF,year==1988))
cm89.TMB <- glmmTMB(cbind(cmdead,numcm-cmdead)~Cultivar,
family=betabinomial(link='logit'),
data=subset(cmDF,year==1989))
cm89.glm <- glm(cbind(cmdead,numcm-cmdead)~Cultivar,
family=quasibinomial(link='logit'),
data=subset(cmDF,year==1989))
mults <- matrix(nrow=2, ncol=6)
dimnames(mults) <- list(c('88','89'),c('phi','nmin','nmax',
'Phimin','Phimax','PhiGLM'))
phi88 <- sigma(cm88.TMB)
nrange <- range(subset(cmDF,year==1988)$numcm)
Phirange <- 1+phi88^{-1}*(nrange-1)
mults['88',] <- c(phi88, nrange, Phirange,
summary(cm88.glm)$dispersion)
phi89 <- sigma(cm89.TMB)
nrange <- range(subset(cmDF,year==1989)$numcm)
Phirange <- 1+phi89^{-1}*(nrange-1)
mults['89',] <- c(phi89, nrange, Phirange,
summary(cm89.glm)$dispersion)
round(mults,2)
cm89d.TMB <- update(cm89.TMB, dispformula=~0+Cultivar,
control=ctl)
nranges <- with(subset(cmDF,year==1989),
sapply(split(numcm,Cultivar),range))
phi89d <- exp(coef(summary(cm89d.TMB))$disp[,1])
Phiranges <- 1+t(nranges-1)*phi89d^-1
colnames(Phiranges) <- c("Min","Max")
round(Phiranges,2)
cm88d.TMB <- update(cm88.TMB, dispformula=~0+Cultivar,
control=ctl)
cmDF88
cmDF89
cmDF88 <- subset(cmDF88, year==1988)
cmDF89 <- subset(cmDF89, year==1989)
cmDF <- DAAG::codling[, c('year','Cultivar',
'dead','tot', 'cm','numcm','gp')]
cmDF$Rep <- qra::gpsWithin(cmDF$gp,cmDF$Cultivar)
cmDF <- cmDF[match(unique(cmDF$gp),cmDF$gp),]
cmDF$cmdead <- with(cmDF, round(numcm*cm))
cmDF88 <- subset(cmDF88, year==1988)
cmDF89 <- subset(cmDF89, year==1989)
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
cm88.TMB <- glmmTMB(cbind(cmdead,numcm-cmdead)~Cultivar,
family=betabinomial(link='logit'),
subset(cmDF,year==1988))
cm88.glm <- glm(cbind(cmdead,numcm-cmdead)~Cultivar,
family=quasibinomial(link='logit'),
data=subset(cmDF,year==1988))
cm89.TMB <- glmmTMB(cbind(cmdead,numcm-cmdead)~Cultivar,
family=betabinomial(link='logit'),
data=subset(cmDF,year==1989))
cm89.glm <- glm(cbind(cmdead,numcm-cmdead)~Cultivar,
family=quasibinomial(link='logit'),
data=subset(cmDF,year==1989))
mults <- matrix(nrow=2, ncol=6)
dimnames(mults) <- list(c('88','89'),c('phi','nmin','nmax',
'Phimin','Phimax','PhiGLM'))
phi88 <- sigma(cm88.TMB)
nrange <- range(subset(cmDF,year==1988)$numcm)
Phirange <- 1+phi88^{-1}*(nrange-1)
mults['88',] <- c(phi88, nrange, Phirange,
summary(cm88.glm)$dispersion)
phi89 <- sigma(cm89.TMB)
nrange <- range(subset(cmDF,year==1989)$numcm)
Phirange <- 1+phi89^{-1}*(nrange-1)
mults['89',] <- c(phi89, nrange, Phirange,
summary(cm89.glm)$dispersion)
round(mults,2)
dim(cmDF88)
cmDF88[1:4,]
dim(cmDF)
cmDF <- DAAG::codling[, c('year','Cultivar',
'dead','tot', 'cm','numcm','gp')]
cmDF$Rep <- qra::gpsWithin(cmDF$gp,cmDF$Cultivar)
cmDF <- cmDF[match(unique(cmDF$gp),cmDF$gp),]
cmDF$cmdead <- with(cmDF, round(numcm*cm))
cmDF88 <- subset(cmDF, year==1988)
cmDF89 <- subset(cmDF, year==1989)
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
cm88.TMB <- glmmTMB(cbind(cmdead,numcm-cmdead)~Cultivar,
family=betabinomial(link='logit'),
subset(cmDF,year==1988))
cm88.glm <- glm(cbind(cmdead,numcm-cmdead)~Cultivar,
family=quasibinomial(link='logit'),
data=subset(cmDF,year==1988))
cm89.TMB <- glmmTMB(cbind(cmdead,numcm-cmdead)~Cultivar,
family=betabinomial(link='logit'),
data=subset(cmDF,year==1989))
cm89.glm <- glm(cbind(cmdead,numcm-cmdead)~Cultivar,
family=quasibinomial(link='logit'),
data=subset(cmDF,year==1989))
mults <- matrix(nrow=2, ncol=6)
dimnames(mults) <- list(c('88','89'),c('phi','nmin','nmax',
'Phimin','Phimax','PhiGLM'))
phi88 <- sigma(cm88.TMB)
nrange <- range(subset(cmDF,year==1988)$numcm)
Phirange <- 1+phi88^{-1}*(nrange-1)
mults['88',] <- c(phi88, nrange, Phirange,
summary(cm88.glm)$dispersion)
phi89 <- sigma(cm89.TMB)
nrange <- range(subset(cmDF,year==1989)$numcm)
Phirange <- 1+phi89^{-1}*(nrange-1)
mults['89',] <- c(phi89, nrange, Phirange,
summary(cm89.glm)$dispersion)
round(mults,2)
dim(cmDF88)
dim(cmDF89)
cm89d.TMB <- update(cm89.TMB, dispformula=~0+Cultivar,
control=ctl)
nranges <- with(subset(cmDF,year==1989),
sapply(split(numcm,Cultivar),range))
phi89d <- exp(coef(summary(cm89d.TMB))$disp[,1])
Phiranges <- 1+t(nranges-1)*phi89d^-1
colnames(Phiranges) <- c("Min","Max")
round(Phiranges,2)
cm88d.TMB <- update(cm88.TMB, dispformula=~0+Cultivar,
control=ctl)
nranges <- with(subset(cmDF,year==1988),
sapply(split(numcm,Cultivar),range))
phi88d <- exp(coef(summary(cm88d.TMB))$disp[,1])
Phiranges <- 1+t(nranges-1)*phi88d^-1
colnames(Phiranges) <- c("Min","Max")
round(Phiranges,2)
cults <- unique(cmDF88$Cultivar)
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
cults <- unique(cmDF88$Cultivar)[c(2:3,5)]
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'), data=df)
phi <- sigma(obj)
nrange <- range(df$numcm)
mat[cult,] <- c(phi, nrange, 1+(nrange-1)*phi^-1)
}
round(mat,1)
obj <- glmmTMB(cbind(dead,tot-dead)~1,
family=betabinomial(link='logit'),
data=subset(df, Cultivar%in%c('ROYAL','GRANNY'))
)
cults <- unique(cmDF88$Cultivar)[c(1,4)]
mat <- matrix(nrow=length(cults),ncol=5)
dimnames(mat) <- list(cults,
c("phi","nmin","nmax","PhiMin","PhiMax"))
for(cult in cults){
df <- subset(cmDF88, cult==Cultivar)
obj <- glm(cbind(dead,tot-dead)~1,
family=quasibinomial(link='logit'), data=df)
mat[cult,] <- summary(obj)$dispersion
}
round(mat,4)
subset(cmDF88, Cultivar=='GRANNY')
getRho
qra::getRho
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
## rep will identify species, lifestage, and rep
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
rep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
pointLab <- 1:nrow(HawCon)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
HCbb.cll <- glmmTMB(cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|rep),
dispformula=~trtGp+poly(TrtTime,3), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+poly(scTime,2)[,-1]+(TrtTime|rep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+poly(TrtTime,2)[,-1]+(TrtTime|rep))
cap5 <- "Fitted lines and quadratic curves, for the models where the
treatment effect is modeled as a quadratic function of time.
Panel A is for the model that uses a complementary log-log
(cloglog) link, while Panel B is for a logit link. The quadratic
curves are shown in attenuated colors."
library(lattice)
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
upper <- upper[subscripts]
lower <- lower[subscripts]
panel.lines(x,lower, ...)
panel.lines(x,upper, ...)
}
panel2 <- function(x, y, ...){
panel.superpose(x, y,
## panel.groups = my.panel.bands,
type='l', alpha=0.2,...)
panel.xyplot(x, y, type='l', lwd=2, cex=0.6, ...)
}
parset <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2)
## c('solid','1141')
dat <- expand.grid(trtGp=factor(levels(HawCon$trtGp), levels=levels(HawCon$trtGp)),
TrtTime=pretty(range(HawCon$TrtTime),15), link=c('cloglog','logit'))
dat$scTime <- scale(dat$TrtTime)
dat$rep <- rep('new',nrow(dat))
hatClog <- predict(HCbb.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatClog2 <- predict(HCbb2s.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
hatLgt2 <- predict(HCbb2s.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
dat <- within(dat, {fit<-c(hatClog$fit,hatLgt$fit); fit2<-c(hatClog2$fit,hatLgt2$fit)
se.fit<-c(hatClog$se.fit,hatLgt$se.fit); se.fit2<-c(hatClog2$se.fit,hatLgt2$se.fit)})
dat <- within(dat, {lwr<-fit-2*se.fit; upr<-fit+2*se.fit})
p <- c(.02,.2,.5,.8, .99, .999968)
clog <- make.link('cloglog')$linkfun
logit <- make.link('logit')$linkfun
fitpos <- list(clog(p), logit(p))
lab <- paste(p)
lim <- list(clog(c(0.02, 0.99998)), logit(c(0.02, 0.99998)))
lim <- lapply(lim, function(x)c(x[1],x[1]+diff(x)*1.2))
gph <- xyplot(fit~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
# upper = dat$upr, lower = dat$lwr,
panel = panel2,
xlab="Days in coolstorage", ylab="Fitted value",
auto.key=list(text=levels(HawCon$trtGp), columns=4, points=FALSE, lines=TRUE),
par.settings=parset, layout=c(2,1), scales=list(x=list(at=c(2,6,10,14)),
y=list(relation='free',
at=fitpos, labels=lab, limits=lim), alternating=c(1,1)))
gph2 <- update(gph, strip=strip.custom(factor.levels=
c("A: Complementary log-log link",
"B: Logit link")))
parset3 <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2, alpha=0.25)
gph3 <- xyplot(fit2~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
## upper = dat$upr, lower = dat$lwr,
panel = panel2, par.settings=parset3, layout=c(2,1))
gph2+latticeExtra::as.layer(gph3)
mnam <- c(paste0('BB: Complementary log-log link', c('', ', added curve')),
paste0('BB: Logit link', c('', ', added curve')))
bbmle::AICtab(HCbb.cll,HCbb2s.cll,HCbb.logit,HCbb2s.logit, mnames=mnam)
cap7 <- "Panel A shows the
quantile-quantile plot.  Panel B plots estimated quantiles
against mortality, while Panel C plots estimated quantiles
against total number, on a logarithmic scale."
set.seed(29)
simRef <- simulateResiduals(HCbb.cll, n=250, seed=FALSE)
plotQQunif(simRef)
plotResiduals(simRef)
plotResiduals(simRef, form=log(HawCon$Total), xlab="log(Total)")
shorten <- function(nam, leaveout=c('trtGp','Fly',':')){
for(txt in leaveout){
nam <- gsub(txt,'', nam, fixed=TRUE)
}
nam
}
cap8 <- "Quantile residuals, by treatment group."
simRes <- DHARMa::simulateResiduals(HCbb.cll, n=250)
dotplot(scaledResiduals~HawCon$trtGp, data=simRes,
scales=list(x=list(rot=30)), ylab="Quantile Residuals",
main=list(expression(plain("A: Residuals, by treatment group")),
x=0.05, y=-0.2, just="left"))
bwplot(scaledResiduals~HawCon$trtGp, data=simRes,  ylab="",
scales=list(x=list(rot=30)),
main=list(expression(plain("B: Boxplot comparison of residuals")),
x=0.05, y=-0.2, just="left"))
## Alternative -- group names are not shown:
## plotResiduals(simRes, form=HawCon$trtGp)
cap6 <- "Panels A and B show intra-class correlation estimates
for, respectively, a complementary log-log link and a logit link.
Both models assume a betabinomial error."
fixef(HCbb.cll)[['disp']]
coef(HCbb.cll)[['disp']]
coef(summary(HCbb.cll))[['disp']]
getRho
getwd()
104.58+42.67-227.99
104.58+42.67-27.99
args(t.test)
?t.test
