## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
cap3 <- "Diagnostics for model with binomial errors and observation level
random effects."
cap4 <- "Fitted lines and quadratic curves, for the models where the
treatment effect isÂ modeled as a quadratic function of time.
Panel A is for the model that uses a complementary log-log
(cloglog) link, while Panel B is for a logit link. The quadratic
curves are shown in attenuated colors."
library(lattice)
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
upper <- upper[subscripts]
lower <- lower[subscripts]
panel.lines(x,lower, ...)
panel.lines(x,upper, ...)
}
panel2 <- function(x, y, ...){
panel.superpose(x, y,
## panel.groups = my.panel.bands,
type='l', alpha=0.2,...)
panel.xyplot(x, y, type='l', lwd=2, cex=0.6, ...)
}
parset <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2)
## c('solid','1141')
dat <- expand.grid(trtGp=factor(levels(HawCon$trtGp), levels=levels(HawCon$trtGp)),
TrtTime=pretty(range(HawCon$TrtTime),15), link=c('cloglog','logit'))
dat$scTime <- scale(dat$TrtTime)
dat$trtGpRep <- rep('new',nrow(dat))
hatClog <- predict(HCbb.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatClog2 <- predict(HCbb2s.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
hatLgt2 <- predict(HCbb2s.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
dat <- within(dat, {fit<-c(hatClog$fit,hatLgt$fit); fit2<-c(hatClog2$fit,hatLgt2$fit)
se.fit<-c(hatClog$se.fit,hatLgt$se.fit); se.fit2<-c(hatClog2$se.fit,hatLgt2$se.fit)})
dat <- within(dat, {lwr<-fit-2*se.fit; upr<-fit+2*se.fit})
p <- c(.02,.2,.5,.8, .99, .999968)
clog <- make.link('cloglog')$linkfun
logit <- make.link('logit')$linkfun
fitpos <- list(clog(p), logit(p))
lab <- paste(p)
lim <- list(clog(c(0.02, 0.99998)), logit(c(0.02, 0.99998)))
lim <- lapply(lim, function(x)c(x[1],x[1]+diff(x)*1.2))
gph <- xyplot(fit~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
# upper = dat$upr, lower = dat$lwr,
panel = panel2,
xlab="Days in coolstorage", ylab="Fitted value",
auto.key=list(text=levels(HawCon$trtGp), columns=4, points=FALSE, lines=TRUE),
par.settings=parset, layout=c(2,1), scales=list(x=list(at=c(2,6,10,14)),
y=list(relation='free',
at=fitpos, labels=lab, limits=lim), alternating=c(1,1)))
gph2 <- update(gph, strip=strip.custom(factor.levels=
c("A: Complementary log-log link",
"B: Logit link")))
parset3 <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2, alpha=0.25)
gph3 <- xyplot(fit2~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
## upper = dat$upr, lower = dat$lwr,
panel = panel2, par.settings=parset3, layout=c(2,1))
gph2+latticeExtra::as.layer(gph3)
HCXreS.BIobs <- update(HCXre.BIobs,
formula=~ .+ trtGp/splines::ns(scTime,2))
HCXreS.BIobs <- update(HCXre.BIobs,
formula=~ .+ trtGp/poly(scTime,2))
mnam <- c(paste0('BB: Complementary log-log link', c('', ', added curve')),
paste0('BB: Logit link', c('', ', added curve')), 'HCXre.BIobs')
bbmle::AICtab(HCbb.cll,HCbb2s.cll,HCbb.logit,HCbb2s.logit, HCXre.BIobs), mnames=mnam)
bbmle::AICtab(HCbb.cll,HCbb2s.cll,HCbb.logit,HCbb2s.logit, HCXre.BIobs, mnames=mnam)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit, link="logit",
a=1:8, b=9:16, eps=0, offset=c(0,1),
df.t=NULL)[,-2]
HCbb.logit
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit, link="logit",
a=1:8, b=9:16, eps=0, offset=0,
df.t=NULL)[,-2]
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit, link="logit",
a=1:8, b=9:16, eps=0, offset=0,
df.t=8)[,-2]
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, offset=0,
df.t=8)[,-2]
HCbb.LTcll <- qra::extractLT(p=0.99, obj=HCbb.cll,
a=1:8, b=9:16, eps=0, offset=0,
df.t=8)[,-2]
HCbb.LTcll
HCbb.LTcll <- qra::extractLT(p=0.99, obj=HCbb.cll, link="cloglog",
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
rownames(HCbb.LTcll) <- shorten(rownames(HCbb.LTcll))
HCbbDisp1.cll <- update(HCbb.cll, dispformula=~1)
HCbin.cll <- update(HCbb.cll, family=binomial(link="cloglog"))
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,
a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
ls()
source('~/pkgs/qra/R/fieller.R', echo=TRUE)
HCbb.LTlogit <- qra::extractLT(p=0.99, obj=HCbb.logit,                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
HCbb.LTlogit <- extractLT(p=0.99, obj=HCbb.logit,                              a=1:8, b=9:16, eps=0, df.t=NULL)[,-2]
g
maxg
tt
b[2]
v22
round(vcov(HCbb.logit),2)
round(varfun(HCbb.logit),2)
round(vcov(HCbb.logit)[['cond']],2)
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
round(vcov(HCbb.logit)[['cond']],2)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2),
family=betabinomial(link="cloglog"), data=HawCon)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), conrol=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
## trtGpRep will identify species, lifestage, and rep
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
cap3 <- "Diagnostics for model with binomial errors and observation level
random effects."
round(vcov(HCbb2s.logit)$cond,2)
round(vcov(HCbb2s.cll)$cond,2)
dim(HawCon)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
sapply(hatLgt, function(x)x[1:2])
summary(HCbb.logit)
HCbb.logit <- update(HCbb.cll, dispformula=~trtGp+poly(TrtTime,3),
family=betabinomial(link="logit"))
round(coef(summary(HCbb.logit))$cond,2)
HCbiObs.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
formObs <- cbind(Dead,Live)~0+trtGp/TrtTime+(obs)+(TrtTime|trtGpRep)
HCbiObs.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
HCbiObs.cll <- glmmTMB(formObs, control=ctl,
family=binomial(link="cloglog"), data=HawCon)
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
## trtGpRep will identify species, lifestage, and rep
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines); library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form,
dispformula=~trtGp+ns(TrtTime,2), control=ctl,
family=betabinomial(link="cloglog"), data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll, dispformula=~trtGp+poly(TrtTime,3),
family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
knitr::opts_chunk$set(echo = FALSE, comment=NA)
options(show.signif.stars=FALSE)
library(qra)
HawCon <- qra::HawCon
## Change name "CommonName" to "CN", for more compact output.
CCnum <- match("CommonName", names(HawCon))
names(HawCon)[CCnum] <- "CN"
## trtGp will identify species & lifestage combination
## trtGpRep will identify species, lifestage, and rep
## cTime is centered version of TrtTime
## scTime is centered and scaled version of TrtTime,
## needed to get some mixed model fits to converge
HawCon <- within(HawCon, {
trtGp <- factor(paste0(CN,LifestageTrt, sep=":"))
trtGpRep <- paste0(CN,LifestageTrt,":",RepNumber)
cTime <- scale(TrtTime, scale=FALSE)
scTime <- scale(TrtTime)
logitp = log((Dead+1/6)/(Live+1/6))
})
obs <- 1:nrow(HawCon)
HawCon$obsINrep <- gpsWithin(obs, HawCon$trtGpRep)
HawCon$obsINtrtGp <- gpsWithin(obs, HawCon$trtGp)
HawCon$obs <- factor(obs)
cap1 <- " Graphs are designed to give an indication of the pattern,
when mortalities are shown on a complementary log-log scale, of
mortality response with days in coolstorage."
library(ggplot2)
graphSum(df=HawCon, link="cloglog", logScale=FALSE,
dead="Dead", tot="Total", dosevar="TrtTime", Rep="RepNumber",
fitRep=NULL, fitPanel=NULL,
byFacet=~trtGp, layout=LifestageTrt~Species,
maint="Hawaian contemporary data",
xlab="Days")
if("VGAM" %in% (.packages()))
detach("package:VGAM", unload=TRUE)
# Load packages that will be used
suppressMessages(
{library(lme4); library(glmmTMB); library(splines);
library(DHARMa)})
ctl <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
form <- cbind(Dead,Live)~0+trtGp/TrtTime+(TrtTime|trtGpRep)
HCbb.cll <- glmmTMB(form, dispformula=~trtGp+ns(TrtTime,2),
family=betabinomial(link="cloglog"),
control=ctl, data=HawCon)
HCbb2s.cll <- update(HCbb.cll,
formula=.~.+ns(scTime,2)[,-1]+(TrtTime|trtGpRep))
## The first '.' leaves the LHS in place. The second '.' takes
## the existing RHS, then adding a quadratic term to it.
HCbb.logit <- update(HCbb.cll,
dispformula=~trtGp+poly(TrtTime,3),
family=betabinomial(link="logit"))
HCbb2s.logit <- update(HCbb.logit,
formula=.~.+ns(TrtTime,2)[,-1]+(TrtTime|trtGpRep))
## family(HCbb.cll)$link
## family(HCqb.glm)$link
cap4 <- "Fitted lines and quadratic curves, for the models where the
treatment effect isÂ modeled as a quadratic function of time.
Panel A is for the model that uses a complementary log-log
(cloglog) link, while Panel B is for a logit link. The quadratic
curves are shown in attenuated colors."
library(lattice)
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
upper <- upper[subscripts]
lower <- lower[subscripts]
panel.lines(x,lower, ...)
panel.lines(x,upper, ...)
}
panel2 <- function(x, y, ...){
panel.superpose(x, y,
## panel.groups = my.panel.bands,
type='l', alpha=0.2,...)
panel.xyplot(x, y, type='l', lwd=2, cex=0.6, ...)
}
parset <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2)
## c('solid','1141')
dat <- expand.grid(trtGp=factor(levels(HawCon$trtGp), levels=levels(HawCon$trtGp)),
TrtTime=pretty(range(HawCon$TrtTime),15), link=c('cloglog','logit'))
dat$scTime <- scale(dat$TrtTime)
dat$trtGpRep <- rep('new',nrow(dat))
hatClog <- predict(HCbb.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatClog2 <- predict(HCbb2s.cll, newdata=subset(dat, link=='cloglog'), se=TRUE, allow.new.levels=TRUE)
hatLgt <- predict(HCbb.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
hatLgt2 <- predict(HCbb2s.logit, newdata=subset(dat, link=='logit'), se=TRUE, allow.new.levels=TRUE)
dat <- within(dat, {fit<-c(hatClog$fit,hatLgt$fit); fit2<-c(hatClog2$fit,hatLgt2$fit)
se.fit<-c(hatClog$se.fit,hatLgt$se.fit); se.fit2<-c(hatClog2$se.fit,hatLgt2$se.fit)})
dat <- within(dat, {lwr<-fit-2*se.fit; upr<-fit+2*se.fit})
p <- c(.02,.2,.5,.8, .99, .999968)
clog <- make.link('cloglog')$linkfun
logit <- make.link('logit')$linkfun
fitpos <- list(clog(p), logit(p))
lab <- paste(p)
lim <- list(clog(c(0.02, 0.99998)), logit(c(0.02, 0.99998)))
lim <- lapply(lim, function(x)c(x[1],x[1]+diff(x)*1.2))
gph <- xyplot(fit~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
# upper = dat$upr, lower = dat$lwr,
panel = panel2,
xlab="Days in coolstorage", ylab="Fitted value",
auto.key=list(text=levels(HawCon$trtGp), columns=4, points=FALSE, lines=TRUE),
par.settings=parset, layout=c(2,1), scales=list(x=list(at=c(2,6,10,14)),
y=list(relation='free',
at=fitpos, labels=lab, limits=lim), alternating=c(1,1)))
gph2 <- update(gph, strip=strip.custom(factor.levels=
c("A: Complementary log-log link",
"B: Logit link")))
parset3 <- simpleTheme(col=rep(1:4,rep(2,4)), lty=rep(1:2, 4), lwd=2, alpha=0.25)
gph3 <- xyplot(fit2~TrtTime|link, outer=TRUE, data=dat, groups=trtGp,
## upper = dat$upr, lower = dat$lwr,
panel = panel2, par.settings=parset3, layout=c(2,1))
gph2+latticeExtra::as.layer(gph3)
dMedEgg <- with(HawCon, dummy(trtGp,"MedFlyEgg:"))
dMedL1 <- with(HawCon, dummy(trtGp,"MedFlyL1:"))
dMedL2 <- with(HawCon, dummy(trtGp,"MedFlyL2:"))
dMedL3 <- with(HawCon, dummy(trtGp,"MedFlyL3:"))
dMelEgg <- with(HawCon, dummy(trtGp,"MelonFlyEgg:"))
dMelL1 <- with(HawCon, dummy(trtGp,"MelonFlyL1:"))
dMelL2 <- with(HawCon, dummy(trtGp,"MelonFlyL2:"))
dMelL3 <- with(HawCon, dummy(trtGp,"MelonFlyL3:"))
formXre <- cbind(Dead, Live) ~ 0 + trtGp/scTime +
(1|obs) + (1|trtGpRep) +
(0 + dMedEgg| trtGpRep) +
(0 + dMedL1 | trtGpRep) +
(0 + dMedL2 | trtGpRep) +
(0 + dMedL3 | trtGpRep) +
(0 + dMelEgg| trtGpRep) +
(0 + dMelL1 | trtGpRep) +
(0 + dMelL2 | trtGpRep) +
(0 + dMelL3 | trtGpRep)
cloglog <- make.link('cloglog')$linkfun
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+ns(TrtTime,2), control=ctl)
summary(HCgauss.cll)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+ns(TrtTime,3), control=ctl)
coef(summary(HCgauss.cll))$cond
coef(summary(HCgauss.cll))$disp
sim <- plotResiduals(HCgauss.cll, plot=T)
sim <- plotResiduals(HCgauss.cll)
args(plotResiduals)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+ns(TrtTime,4), control=ctl)
sim <- plotResiduals(HCgauss.cll)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon,
dispformula=~trtGp+bs(TrtTime,3), control=ctl)
sim <- plotResiduals(HCgauss.cll)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep))
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon, control=ctl)
HCgauss.cll <- glmmTMB(cloglog((PropDead+0.002)/1.004)~0+
trtGp/TrtTime+(TrtTime|trtGpRep),
family=gaussian(), data=HawCon)
sim <- plotResiduals(HCgauss.cll)
HCX.BIobs <- glmmTMB(cbind(Dead, Live) ~ 0 + trtGp/scTime +
(1|obs) + (1|trtGpRep), family=binomial(link='cloglog'),
control=ctl, data=HawCon)
AIC(HCX.BIobs, HCXre.BIobs)
sim <- plotResiduals(HCX.BIobs)
round(extractLT(HCX.BIobs, a=1:8,b=9:16),2)
round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)
round(extractLT(HCbb.cll, a=1:8,b=9:16),2)
cbind(round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)[,4],
round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)[,4],
)
cbind(round(extractLT(HCX.BIobs, a=1:8,b=9:16, offset=offset),2)[,4],
round(extractLT(HCbb.cll, a=1:8,b=9:16),2)[,4])
HC.BIobs <- HCX.BIobs
HCX.BIobs <- glmmTMB(cbind(Dead, Live) ~ 0 + trtGp/scTime +
(1|obs) + (TrtTime|trtGpRep),
family=binomial(link='cloglog'),
control=ctl, data=HawCon)
AIC(HCX.BIobs, HC.BIobs)
devtools::document()
rm(list = c("extractLT", "extractLTpwr", "fieller", "fieller2"))
devtools::document()
tools::showNonASCII("~/pkgs/qra/R/extractLT.R")
tools::showNonASCIIfile("~/pkgs/qra/R/extractLT.R")
devtools::document()
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
search()
detach(2)
library(qra)
rm(list=ls())
library(qra)
system.file('qra')
ls()
search()
detach(2)
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
system.file(package='qra')
?system.file
system.file()
devtools::document()
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
search()
detach(2)
search()
devtools::document()
args(remove.packages)
remove.packages
?remove.packages
remove.packages('qra')
install.packages("~/pkgs/qra_0.1.6.tar.gz", repos = NULL, type = "source")
args(extractLT)
R.version
